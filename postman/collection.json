{
	"info": {
		"_postman_id": "074d18ad-06e1-4b82-bb85-d8cbf58c0cbf",
		"name": "django_backend_template",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"pm.test(\"Status code name is 'Created'\", function () {",
							"    pm.response.to.have.status(\"Created\");",
							"});",
							"",
							"pm.test(\"Response includes 'username'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"username\");",
							"});",
							"",
							"pm.test(\"Response includes 'token'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"token\");",
							"});",
							"",
							"pm.test(\"Verify username\", function () {",
							"    var username = pm.environment.get(\"username\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(username);",
							"});",
							"",
							"",
							"// Save JSON Web Token to environment",
							"let jwt = pm.response.json().token;",
							"pm.environment.set(\"jwt\", jwt);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/api/users/",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name is 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Response includes 'user'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"user\");",
							"});",
							"",
							"pm.test(\"Response includes 'token'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"token\");",
							"});",
							"",
							"pm.test(\"Verify username\", function () {",
							"    var username = pm.environment.get(\"username\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.user.username).to.eql(username);",
							"});",
							"",
							"",
							"// Save JSON Web Token to environment",
							"let jwt = pm.response.json().token;",
							"pm.environment.set(\"jwt\", jwt);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/token-auth/",
					"host": [
						"{{server}}"
					],
					"path": [
						"token-auth",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Current User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name is 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Response includes 'username'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"username\");",
							"});",
							"",
							"pm.test(\"Response includes 'email'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"email\");",
							"});",
							"",
							"pm.test(\"Verify username\", function () {",
							"    var username = pm.environment.get(\"username\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(username);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/api/current_user/",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"current_user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name is 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"// Visualizer",
							"let template = `",
							"    <h1>Users</h1>",
							"    <table>",
							"        {{# each response}}",
							"            <tr>",
							"                <td>{{username}}</td>",
							"                <td>{{email}}</td>",
							"            </tr>",
							"        {{/each}}",
							"    </table>",
							"`;",
							"pm.visualizer.set(template, {response: pm.response.json()});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/api/users/",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User Detail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Tests",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name is 'OK'\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Response includes 'username'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"username\");",
							"});",
							"",
							"pm.test(\"Response includes 'email'\", function () {",
							"    pm.expect(pm.response.json()).to.include.keys(\"email\");",
							"});",
							"",
							"pm.test(\"Verify username\", function () {",
							"    var username = pm.environment.get(\"username\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.username).to.eql(username);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/api/users/{{username}}/",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"users",
						"{{username}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User Detail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Status code name is 'No Content'\", function () {",
							"    pm.response.to.have.status(\"No Content\");",
							"});",
							"",
							"// Delete JSON Web Token",
							"pm.environment.unset(\"jwt\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server}}/api/users/{{username}}/",
					"host": [
						"{{server}}"
					],
					"path": [
						"api",
						"users",
						"{{username}}",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "JWT {{jwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}